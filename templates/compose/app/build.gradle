plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def keystoreProperties = new Properties()
def keystoreFile = file('keystore/keystore.properties')
def hasKeystore = keystoreFile.exists() || System.getenv('KEYSTORE_PASSWORD')
def backendUrl = System.getenv("BACKEND_URL") ?: "http://localhost:5000"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.compose"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    if (hasKeystore) {
        signingConfigs {
            release {
                if (keystoreFile.exists()) {
                    file('keystore/keystore.properties').withInputStream {
                        keystoreProperties.load(it)
                    }

                    storeFile file("$keystoreProperties.storeFile")
                    storePassword "$keystoreProperties.storePassword"
                    keyAlias "$keystoreProperties.keyAlias"
                    keyPassword "$keystoreProperties.keyPassword"
                } else {
                    storeFile file('keystore/android_keystore.keystore')
                    storePassword System.getenv('KEYSTORE_PASSWORD')
                    keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                    keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
                }
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "BACKEND_URL", "\"$backendUrl\"")
        }

        release {
            if (hasKeystore) {
                signingConfig signingConfigs.release
            }

            buildConfigField("String", "BACKEND_URL", "\"$backendUrl\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha01'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}